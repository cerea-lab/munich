# Copyright (C) 2021, CEREA (ENPC - EDF R&D)
#
# This file is part of the air quality model MUNICH.
#
# MUNICH is developed in the ENPC - EDF R&D joint laboratory CEREA.
#
# MUNICH is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# MUNICH is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# For more information, visit the MUNICH web site:
#      http://cerea.enpc.fr/munich/

import os

# Put the path to Polyphemus.
# Also editable from command line with option "polyphemus".
polyphemus_path = "../../"

utils = SConscript(polyphemus_path + '/scons/utils')(globals())

# Include paths: put the absolute paths, the relative paths or the paths
# into the Polyphemus directory.
include_path = """
    include/common
    include/Talos
    include/SeldonData
    include/AtmoData
    include/modules/common
    include/modules/aerosol
    include/modules/aerosol/Aerosol_SSH/INC
    include/modules/aerosol/Aerosol_SSH/VSRM
    include/modules/aerosol/Aerosol_SSH/SIMPLE_AQUEOUS
    include/modules/aerosol/Aerosol_SSH/RDB
    include/modules/aerosol/Aerosol_SSH
    include/models
    include/driver
    include/driver/output_saver
    """

# [Optional] Compiled library paths: put absolute paths, relative paths or
# paths that are in the Polyphemus directory. Put the list of paths to
# compiled libraries that may not be installed in your system root.
library_path = None

# Default option for ssh output: no
if 'ssh-output' not in ARGUMENTS:
    ARGUMENTS["ssh-output"] = 'no'

# Hack in Polair3DChemistry.
preprocessor_defines = ["POLYPHEMUS_WITH_AEROSOL_MODULE"]

if ARGUMENTS["ssh-output"] == 'yes':
    preprocessor_defines.append("WRITE_SSH_OUTPUT")

preprocessor_defines.append("POLYPHEMUS_WITH_SSH_AEROSOL")

# Default: no shared library
if 'sharedlib' not in ARGUMENTS:
    ARGUMENTS["sharedlib"] = 'no'

if ARGUMENTS["sharedlib"] == "no":
    utils.create_programs()
elif ARGUMENTS["sharedlib"] == "yes":
    utils.create_programs(False)


# Avoids displaying the libraries checking next time since libraries
# does not change in this case.
utils.run.quiet(True)
